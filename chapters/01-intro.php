	<section id="chap-intro" class="chapter">
		<h2>Introduction</h2>
		<p>Though the phrase “knowledge graph” has been used in the literature since at least 1972&nbsp;<?php echo $references->cite("Schneider72"); ?>, the modern incarnation of the phrase stems from the 2012 announcement of the Google Knowledge Graph&nbsp;<?php echo $references->cite("GoogleKG"); ?>, followed by further announcements of knowledge graphs by Airbnb&nbsp;<?php echo $references->cite("AirBnBKG"); ?>, Amazon&nbsp;<?php echo $references->cite("AmazonKG"); ?>, eBay&nbsp;<?php echo $references->cite("eBayKG"); ?>, Facebook&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>, IBM&nbsp;<?php echo $references->cite("IBMKG"); ?>, LinkedIn&nbsp;<?php echo $references->cite("LinkedInKG"); ?>, Microsoft&nbsp;<?php echo $references->cite("BingKG"); ?>, Uber&nbsp;<?php echo $references->cite("UberKG"); ?>, and more besides. The growing industrial uptake of the concept proved difficult for academia to ignore: more and more scientific literature is being published on knowledge graphs, which includes books (e.g.,&nbsp;<?php echo $references->cite("PVGW2017,QiCLWJW19,FenselSAHKPTUW20,KejriwalKS2021"); ?>), as well as papers outlining definitions (e.g.,&nbsp;<?php echo $references->cite("EhrlingerW16"); ?>), novel techniques (e.g.,&nbsp;<?php echo $references->cite("PujaraMGC13,wang2014knowledge,lin2015learning"); ?>), and surveys of specific aspects of knowledge graphs (e.g.,&nbsp;<?php echo $references->cite("Paulheim17,Wang2017KGEmbedding"); ?>).</p>
		<p>Underlying all such developments is the core idea of using graphs to represent data, often enhanced with some way to explicitly represent knowledge&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>. The result is most often used in application scenarios that involve integrating, managing and extracting value from diverse sources of data at large scale&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>. Employing a graph-based abstraction of knowledge has numerous benefits in such settings when compared with, for example, a relational model or NoSQL alternatives. Graphs provide a concise and intuitive abstraction for a variety of domains, where edges capture the (potentially cyclical) relations between the entities inherent in social data, biological interactions, bibliographical citations and co-authorships, transport networks, and so forth&nbsp;<?php echo $references->cite("AnglesG08"); ?>. Graphs allow maintainers to postpone the definition of a schema, allowing the data – and its scope – to evolve in a more flexible manner than typically possible in a relational setting, particularly for capturing incomplete knowledge&nbsp;<?php echo $references->cite("Abiteboul97"); ?>. Unlike (other) NoSQL models, specialised graph query languages support not only standard relational operators (joins, unions, projections, etc.), but also navigational operators for recursively finding entities connected through arbitrary-length paths&nbsp;<?php echo $references->cite("AnglesABHRV17"); ?>. Standard knowledge representation formalisms – such as ontologies&nbsp;<?php echo $references->cite("OWL2,RDFS,obof"); ?> and rules&nbsp;<?php echo $references->cite("swrl,rif"); ?> – can be employed to define and reason about the semantics of the terms used to label and describe the nodes and edges in the graph. Scalable frameworks for graph analytics&nbsp;<?php echo $references->cite("MalewiczABDHLC10,XinGFS13,signalcollect"); ?> can be leveraged for computing centrality, clustering, summarisation, etc., in order to gain insights about the domain being described. Various representations have also been developed that support applying machine learning techniques both directly and indirectly over graphs&nbsp;<?php echo $references->cite("Wang2017KGEmbedding,abs-1901-00596"); ?>.</p>
		<p>In summary, the decision to build and use a knowledge graph opens up a range of techniques that can be brought to bear for integrating and extracting value from diverse sources of data at large scale. The goal of this book is to motivate and give a comprehensive introduction to knowledge graphs: to describe their foundational data models and how they can be queried; to discuss representations relating to schema, identity, and context; to discuss deductive and inductive ways to make knowledge explicit; to present a variety of techniques that can be used for the creation and enrichment of graph-structured data; to describe how the quality of knowledge graphs can be discerned and how they can be refined; to discuss standards and best practices by which knowledge graphs can be published; and to provide an overview of existing knowledge graphs found in practice. Our intended audience includes researchers and practitioners who are new to knowledge graphs. As such, we do not assume that readers have specific expertise on knowledge graphs.</p>

		<p><em class="paragraph">Knowledge graph</em>. The definition of a “<em>knowledge graph</em>” remains contentious&nbsp;<?php echo $references->cite("EhrlingerW16,BonattiDPP18,Bergman19"); ?>, where a number of (sometimes conflicting) definitions have emerged, varying from specific technical proposals to more inclusive general proposals; we address these prior definitions in Appendix&nbsp;<?php echo ref("chap:defs"); ?>. Herein we adopt an inclusive definition, where we view a knowledge graph as <em>a graph of data intended to accumulate and convey knowledge of the real world, whose nodes represent entities of interest and whose edges represent relations between these entities</em>. The graph of data (aka <em>data graph</em>) conforms to a graph-based data model, which may be a <em>directed edge-labelled graph</em>, a <em>property graph</em>, etc. (we discuss concrete alternatives in Chapter&nbsp;<?php echo ref("chap:graph"); ?>). By <em>knowledge</em>, we refer to something that is <em>known</em>. Such knowledge may be accumulated from external sources, or extracted from the knowledge graph itself. Knowledge may be composed of simple statements, such as “<em>Santiago is the capital of Chile</em>”, or quantified statements, such as “<em>all capitals are cities</em>”. Simple statements can be accumulated as edges in the data graph. If the knowledge graph intends to accumulate quantified statements, a more expressive way to represent knowledge – such as <em>ontologies</em> or <em>rules</em> – is required. <em>Deductive methods</em> can then be used to entail and accumulate further knowledge (e.g., “<em>Santiago is a city</em>”). Additional knowledge – based on simple or quantified statements – can also be extracted from and accumulated by the knowledge graph using <em>inductive methods</em>.</p>
		<p>Knowledge graphs are often assembled from numerous sources, and as a result, can be highly diverse in terms of structure and granularity. To address this diversity, representations of <em>schema</em>, <em>identity</em>, and <em>context</em> often play a key role, where a <em>schema</em> defines a high-level structure for the knowledge graph, <em>identity</em> denotes which nodes in the graph (or in external sources) refer to the same real-world entity, while <em>context</em> may indicate a specific setting in which some unit of knowledge is held true. As aforementioned, effective methods for <em>extraction</em>, <em>enrichment</em>, <em>quality assessment</em>, and <em>refinement</em> are required for a knowledge graph to grow and improve over time.</p>

		<p><em class="paragraph">In practice</em>. Knowledge graphs aim to serve as an ever-evolving shared substrate of knowledge within an organisation or community&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>. We distinguish two types of knowledge graphs in practice: <em>open knowledge graphs</em> and <em>enterprise knowledge graphs</em>. Open knowledge graphs are published online, making their content accessible for the public good. The most prominent examples – DBpedia&nbsp;<?php echo $references->cite("LehmannIJJKMHMK15"); ?>, Freebase&nbsp;<?php echo $references->cite("bollacker2007freebase"); ?>, Wikidata&nbsp;<?php echo $references->cite("VrandecicK14"); ?>, YAGO&nbsp;<?php echo $references->cite("YAGO"); ?>, etc. – cover many domains and are either extracted from Wikipedia&nbsp;<?php echo $references->cite("LehmannIJJKMHMK15,YAGO"); ?>, or built by communities of volunteers&nbsp;<?php echo $references->cite("bollacker2007freebase,VrandecicK14"); ?>. Open knowledge graphs have also been published within specific domains, such as media&nbsp;<?php echo $references->cite("RaimondFSA14"); ?>, government&nbsp;<?php echo $references->cite("HendlerHMT12,ShadboltO13"); ?>, geography&nbsp;<?php echo $references->cite("StadlerLHA12"); ?>, tourism&nbsp;<?php echo $references->cite("LuLS16,abs-1805-05744,MaturanaALMH18,ZhangCHYAL19"); ?>, life sciences&nbsp;<?php echo $references->cite("CallahanCAD13"); ?>, and more besides. Enterprise knowledge graphs are typically internal to a company and applied for commercial use-cases&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>. Prominent industries using enterprise knowledge graphs include Web search (e.g., Bing&nbsp;<?php echo $references->cite("BingKG"); ?>, Google&nbsp;<?php echo $references->cite("GoogleKG"); ?>), commerce (e.g., Airbnb&nbsp;<?php echo $references->cite("AirBnBKG"); ?>, Amazon&nbsp;<?php echo $references->cite("AmazonKG,dong2019building"); ?>, eBay&nbsp;<?php echo $references->cite("eBayKG"); ?>, Uber&nbsp;<?php echo $references->cite("UberKG"); ?>), social networks (e.g., Facebook&nbsp;<?php echo $references->cite("NoyGJNPT19"); ?>, LinkedIn&nbsp;<?php echo $references->cite("LinkedInKG"); ?>), finance (e.g., Accenture&nbsp;<?php echo $references->cite("AccentureKG"); ?>, Banca d’Italia&nbsp;<?php echo $references->cite("BellomariniFGS19"); ?>, Bloomberg&nbsp;<?php echo $references->cite("BloombergKG"); ?>, Capital One&nbsp;<?php echo $references->cite("CapitalOneKG"); ?>, Wells Fargo&nbsp;<?php echo $references->cite("WellsFargoKG"); ?>), among others. Applications include search&nbsp;<?php echo $references->cite("BingKG,GoogleKG"); ?>, recommendations&nbsp;<?php echo $references->cite("AirBnBKG,UberKG,LinkedInKG,NoyGJNPT19"); ?>, personal agents&nbsp;<?php echo $references->cite("eBayKG"); ?>, advertising&nbsp;<?php echo $references->cite("LinkedInKG"); ?>, business analytics&nbsp;<?php echo $references->cite("LinkedInKG"); ?>, risk assessment&nbsp;<?php echo $references->cite("ThompsonReutersKG,MaanaKG"); ?>, automation&nbsp;<?php echo $references->cite("HensonSTK19"); ?>, and more besides. We will provide more details on the use of knowledge graphs in practice in Chapter&nbsp;<?php echo ref("chap:kgs"); ?>.</p>

		<p><em class="paragraph">Running example</em>. To keep the discussion accessible, throughout the book, we present concrete examples in the context of a hypothetical knowledge graph relating to tourism in Chile (loosely inspired by related use-cases&nbsp;<?php echo $references->cite("abs-1805-05744,LuLS16"); ?>). The knowledge graph is managed by a tourism board that aims to increase tourism in the country and promote new attractions in strategic areas. The knowledge graph itself will eventually describe tourist attractions, cultural events, services, businesses, travel routes, etc. Some applications the organisation envisages are to:</p>
		<ul>
			<li>create a tourism portal that allows visitors to search for attractions, upcoming events, and other related services (in multiple languages);</li>
			<li>gain insights into tourism demographics in terms of season, nationalities, etc.;</li>
			<li>analyse sentiment about tourist attractions, including positive reviews, summaries of complaints about events and services, crime reports, etc.;</li>
			<li>understand tourism trajectories: the sequence of attractions, events, etc., that tourists often visit;</li>
			<li>cross-reference these tourism trajectories with currently available flights, buses, etc., to suggest new strategic routes for public transport;</li>
			<li>offer personalised recommendations of places to visit;</li>
			<li>and so forth.</li>
		</ul>

		<p><em class="paragraph">Outline</em>. The remainder of the book is structured as follows:</p>
		<dl id="outline">
			<dt>Chapter&nbsp;<?php echo ref("chap:graph"); ?></dt>
			<dd>outlines graph data models and the languages used to query them.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:knowledge"); ?></dt>
			<dd>describes representations of schema, identity, and context for graphs.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:deductive"); ?></dt>
			<dd>presents deductive formalisms for representing and entailing knowledge.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:inductive"); ?></dt>
			<dd>describes inductive techniques for learning from graphs.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:create"); ?></dt>
			<dd>discusses the creation and enrichment of knowledge graphs.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:quality"); ?></dt>
			<dd>enumerates dimensions for assessing knowledge graph quality.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:refine"); ?></dt>
			<dd>discusses various techniques for knowledge graph refinement.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:publish"); ?></dt>
			<dd>introduces principles and protocols for publishing knowledge graphs.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:kgs"); ?></dt>
			<dd>surveys some prominent knowledge graphs and their applications.</dd>
			<dt>Chapter&nbsp;<?php echo ref("chap:conclude"); ?></dt>
			<dd>concludes with future directions for knowledge graphs.</dd>
			<dt>Appendix&nbsp;<?php echo ref("chap:defs"); ?></dt>
			<dd>outlines the historical background for knowledge graphs.</dd>
		</dl>
	</section>
